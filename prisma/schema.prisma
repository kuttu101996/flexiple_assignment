// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  // available_tables Int @default(10)
  user      User[]
  table     Table[]
  menu      MenuItem[]
  is_active Boolean    @default(true)
}

enum UserRole {
  STAFF
  MANAGER
  ADMIN
  SUPER_ADMIN
}

model User {
  id            String      @id @default(uuid())
  name          String?
  email         String      @unique
  password      String?
  role          UserRole    @default(STAFF)
  created_at    DateTime    @default(now())
  restaurant    Restaurant? @relation(fields: [restaurant_id], references: [id], onDelete: Cascade)
  restaurant_id Int?
  is_active     Boolean     @default(true)
}

model MenuItem {
  id            Int        @id @default(autoincrement())
  name          String
  price         Int
  description   String?
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id], onDelete: Cascade)
  restaurant_id Int
  is_active     Boolean    @default(true)
}

model Table {
  id            Int        @id @default(autoincrement())
  table_number  String     @unique
  is_available  Boolean    @default(true)
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id], onDelete: Cascade)
  restaurant_id Int
  order         Order[]
}

model Order {
  id             Int       @id @default(autoincrement())
  table          Table     @relation(fields: [table_id], references: [id], onDelete: Cascade)
  table_id       Int
  total_amount   Float
  items          Json[]
  payment        Payment[]
  is_paymentDone Boolean   @default(false)
  is_active      Boolean   @default(true)
}

model Payment {
  id           Int      @id @default(autoincrement())
  order        Order    @relation(fields: [order_id], references: [id], onDelete: Cascade)
  order_id     Int
  amount       Float
  payment_date DateTime @default(now())
}
